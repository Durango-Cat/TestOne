#%%

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report
#全局取消证书验证
import ssl

ssl._create_default_https_context = ssl._create_unverified_context

#%%

# 1.获取数据
names = ['Sample code number', 'Clump Thickness', 'Uniformity of Cell Size', 'Uniformity of Cell Shape',
                   'Marginal Adhesion', 'Single Epithelial Cell Size', 'Bare Nuclei', 'Bland Chromatin',
                   'Normal Nucleoli', 'Mitoses', 'Class']
data = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data',names=names)

#%%

data

#%%

# 2.基本数据处理
# 2.1 缺失值处理
data = data.replace(to_replace="?",value=np.nan)

#%%

data = data.dropna()

#%%

print("describe: ", data.describe())

#%%

print("head: ", data.head())

#%%

# 2.2 确定特征值,目标值
x = data.iloc[:,1:-1]

#%%

x

#%%

y = data["Class"]

#%%

print(y)

#%%

# 2.3 分割数据
x_train,x_test,y_train,y_test  = train_test_split(x,y,random_state=22,test_size=0.2)

#%%

# 3.特征工程(标准化)
tranfer = StandardScaler()
x_train = tranfer.fit_transform(x_train)

#%%

x_test = tranfer.fit_transform(x_test)

#%%

# 4.机器学习(逻辑回归)
estimactor = LogisticRegression()
estimactor.fit(x_train,y_train)

#%%

np.any(pd.isnull(data))

#%%

# 5.模型评估
# 5.1基本评估

y_per = estimactor.predict(x_test)
print("预测值是:\n",y_per)
score = estimactor.score(x_test,y_test)
print("准确率是:\n",score)

#%%

# 5.2其他评估
ret = classification_report(y_test,y_per,labels=[2,4],target_names=["恶性","良性"])

#%%

print(ret)


